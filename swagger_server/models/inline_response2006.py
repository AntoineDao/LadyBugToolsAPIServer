# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.grid_based_recipe_schema import GridBasedRecipeSchema  # noqa: F401,E501
from swagger_server.models.uuid_schema import UuidSchema  # noqa: F401,E501
from swagger_server import util


class InlineResponse2006(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, uuid: UuidSchema=None, recipe: GridBasedRecipeSchema=None):  # noqa: E501
        """InlineResponse2006 - a model defined in Swagger

        :param uuid: The uuid of this InlineResponse2006.  # noqa: E501
        :type uuid: UuidSchema
        :param recipe: The recipe of this InlineResponse2006.  # noqa: E501
        :type recipe: GridBasedRecipeSchema
        """
        self.swagger_types = {
            'uuid': UuidSchema,
            'recipe': GridBasedRecipeSchema
        }

        self.attribute_map = {
            'uuid': 'uuid',
            'recipe': 'recipe'
        }

        self._uuid = uuid
        self._recipe = recipe

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2006':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_6 of this InlineResponse2006.  # noqa: E501
        :rtype: InlineResponse2006
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uuid(self) -> UuidSchema:
        """Gets the uuid of this InlineResponse2006.


        :return: The uuid of this InlineResponse2006.
        :rtype: UuidSchema
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid: UuidSchema):
        """Sets the uuid of this InlineResponse2006.


        :param uuid: The uuid of this InlineResponse2006.
        :type uuid: UuidSchema
        """
        if uuid is None:
            raise ValueError("Invalid value for `uuid`, must not be `None`")  # noqa: E501

        self._uuid = uuid

    @property
    def recipe(self) -> GridBasedRecipeSchema:
        """Gets the recipe of this InlineResponse2006.


        :return: The recipe of this InlineResponse2006.
        :rtype: GridBasedRecipeSchema
        """
        return self._recipe

    @recipe.setter
    def recipe(self, recipe: GridBasedRecipeSchema):
        """Sets the recipe of this InlineResponse2006.


        :param recipe: The recipe of this InlineResponse2006.
        :type recipe: GridBasedRecipeSchema
        """
        if recipe is None:
            raise ValueError("Invalid value for `recipe`, must not be `None`")  # noqa: E501

        self._recipe = recipe
